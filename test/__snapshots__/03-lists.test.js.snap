// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lists Argument lists identifies argument lists 1`] = `
Arguments [
	"A"
	"B"
	{
		a: "C"
	}
]
`;

exports[`Lists Argument lists only identifies lists with an obvious [[ParameterMap]] 1`] = `
[
	"A"
	"B"
	"C"
]
`;

exports[`Lists Argument lists only identifies lists with an obvious [[ParameterMap]] 2`] = `
[
	"A"
	"B"
	"C"
]
`;

exports[`Lists Argument lists prints assigned properties 1`] = `
Arguments [
	1
	2
	
	foo: "Foo"
]
`;

exports[`Lists Argument lists prints assigned properties 2`] = `
Arguments [
	1
	2
	
	2: 3
	foo: "Foo"
	bar: "Bar"
]
`;

exports[`Lists Argument lists prints assigned properties 3`] = `
Arguments [
	"A"
	"B"
	{
		a: "C"
	}
	
	string: "ABC XYZ"
]
`;

exports[`Lists Argument lists prints empty argument lists on one line 1`] = `Arguments []`;

exports[`Lists Argument lists prints holes in sparsely-populated argument lists 1`] = `
Arguments [
	empty × 6
]
`;

exports[`Lists Argument lists prints holes in sparsely-populated argument lists 2`] = `
Arguments [
	empty × 2
	true
	empty × 3
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded elides entries 1`] = `[…]`;

exports[`Lists Arrays When \`maxDepth\` is exceeded elides entries 2`] = `
[
	1
	2
	3
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded elides entries 3`] = `
{
	foo: […]
}
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded elides nested entries 1`] = `
[
	[…]
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded elides nested entries 2`] = `
[
	1
	[…]
	3
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded elides nested entries 3`] = `
[
	1
	[
		2
		[…]
	]
	3
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 1`] = `CustomArray […]`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 2`] = `
CustomArray [
	text: "It's very custom"
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 3`] = `
{
	foo: CustomArray […]
}
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 4`] = `
{
	foo: CustomArray [
		text: "It's very custom"
	]
}
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 5`] = `CustomArray […]`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 6`] = `CustomArray […]`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 7`] = `
CustomArray [
	"Foo"
	[…]
	
	text: "It's very custom"
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 8`] = `
CustomArray [
	0: "Foo"
	1: […]
	
	text: "It's very custom"
]
`;

exports[`Lists Arrays When \`maxDepth\` is exceeded still identifies subclasses 9`] = `
CustomArray [
	0: "Foo"
	1: [
		0: "Bar"
	]
	
	text: "It's very custom"
]
`;

exports[`Lists Arrays identifies subclasses 1`] = `
Point [
	10
	40
	0
	
	x: 10
	y: 40
	z: 0
]
`;

exports[`Lists Arrays identifies subclasses 2`] = `
Supervoid [
	empty × 1600
	
	name: "Boötes"
]
`;

exports[`Lists Arrays numbers each element if \`opts.indexes\` is set 1`] = `
[
	0: 1
	1: 2
	2: 3
]
`;

exports[`Lists Arrays numbers each element if \`opts.indexes\` is set 2`] = `
[
	0: "1"
	1: "Foo"
	2: {
		bar: "Baz"
	}
	3: []
]
`;

exports[`Lists Arrays numbers each element if \`opts.indexes\` is set 3`] = `
[
	0: [
		0: 1
		1: 2
	]
	1: [
		0: 3
		1: 4
		2: 5
	]
]
`;

exports[`Lists Arrays numbers each element if \`opts.indexes\` is set 4`] = `
[
	empty × 3
	3: true
]
`;

exports[`Lists Arrays numbers each element if \`opts.indexes\` is set 5`] = `
[
	0: false
	empty × 2
	3: undefined
	
	foo: "Bar"
]
`;

exports[`Lists Arrays prints array entries 1`] = `
[
	"Foo"
]
`;

exports[`Lists Arrays prints array entries 2`] = `
[
	1
	2
]
`;

exports[`Lists Arrays prints array entries 3`] = `
[
	{
		foo: "bar"
	}
]
`;

exports[`Lists Arrays prints array entries 4`] = `
[
	"A"
	{
		abc: "ABC"
	}
	"Z"
]
`;

exports[`Lists Arrays prints assigned properties 1`] = `
[
	"Foo"
	
	xyz: "XYZ"
	abc: "ABC"
]
`;

exports[`Lists Arrays prints assigned properties 2`] = `
[
	"Foo"
	"Bar"
	
	xyz: "XYZ"
	abc: "ABC"
]
`;

exports[`Lists Arrays prints assigned properties 3`] = `
[
	"Foo"
	"Bar"
	
	xyz: "XYZ"
	abc: "ABC"
	Symbol(XYZ): "xyz"
]
`;

exports[`Lists Arrays prints assigned properties 4`] = `
[
	"Foo"
	"Bar"
	3
	
	xyz: "XYZ"
	abc: "ABC"
	Symbol(XYZ): "xyz"
	Symbol(ABC): "abc"
]
`;

exports[`Lists Arrays prints empty arrays on one line 1`] = `[]`;

exports[`Lists Arrays prints empty arrays on one line 2`] = `
[
	[]
]
`;

exports[`Lists Arrays prints empty arrays on one line 3`] = `
[
	{
		foo: []
	}
]
`;

exports[`Lists Arrays prints empty arrays on one line 4`] = `
[
	foo: "Bar"
]
`;

exports[`Lists Arrays prints holes in sparse arrays 1`] = `
[
	1
	empty × 1
	3
]
`;

exports[`Lists Arrays prints holes in sparse arrays 2`] = `
[
	1
	empty × 2
	4
]
`;

exports[`Lists Arrays prints holes in sparse arrays 3`] = `
[
	1
	empty × 3
	5
]
`;

exports[`Lists Arrays prints holes in sparse arrays 4`] = `
[
	1
	empty × 2
	4
	empty × 1
	6
]
`;

exports[`Lists Arrays prints holes in sparse arrays 5`] = `
[
	1
	empty × 3
	5
	empty × 2
	8
]
`;

exports[`Lists Arrays prints holes in sparse arrays 6`] = `
[
	1
	empty × 3
	5
	empty × 2
	8
	empty × 1
]
`;

exports[`Lists Arrays prints holes in sparse arrays 7`] = `
[
	empty × 4
	5
	empty × 2
	8
	empty × 1
]
`;

exports[`Lists Arrays prints holes in sparse arrays 8`] = `
[
	empty × 1
]
`;

exports[`Lists Arrays prints holes in sparse arrays 9`] = `
[
	empty × 2
]
`;

exports[`Lists Arrays prints holes in sparse arrays 10`] = `
[
	empty × 3
]
`;

exports[`Lists Arrays prints holes in sparse arrays 11`] = `
[
	empty × 1
	2
]
`;

exports[`Lists Arrays prints holes in sparse arrays 12`] = `
[
	empty × 2
	3
]
`;

exports[`Lists Arrays prints holes in sparse arrays 13`] = `
[
	empty × 3
	4
]
`;

exports[`Lists Arrays prints holes in sparse arrays 14`] = `
[
	1
	empty × 1
]
`;

exports[`Lists Arrays prints holes in sparse arrays 15`] = `
[
	1
	empty × 2
]
`;

exports[`Lists Arrays prints holes in sparse arrays 16`] = `
[
	1
	empty × 3
]
`;

exports[`Lists Arrays prints holes in sparse arrays 17`] = `
[
	1
	empty × 1
	undefined
	empty × 1
	5
]
`;

exports[`Lists Arrays prints holes in sparse arrays 18`] = `
[
	1
	empty × 1
	
	foo: "Foo"
]
`;

exports[`Lists Arrays prints holes in sparse arrays 19`] = `
[
	empty × 1
	
	bar: "Bar"
]
`;

exports[`Lists Arrays prints holes in sparse arrays 20`] = `
[
	empty × 2
	
	bar: "Bar"
]
`;

exports[`Lists Arrays prints holes in sparse arrays 21`] = `
[
	empty × 1
	2
	
	bar: "Bar"
]
`;

exports[`Lists Arrays prints holes in sparse arrays 22`] = `
[
	empty × 40
]
`;

exports[`Lists Arrays prints holes in sparse arrays 23`] = `
[
	empty × 55
	0
]
`;

exports[`Lists Typed arrays ArrayBuffers doesn't print hexadecimal if \`noHex\` is enabled 1`] = `
ArrayBuffer {
	195
	132
	0
	203
	135
	33
	10
}
`;

exports[`Lists Typed arrays ArrayBuffers doesn't print hexadecimal if \`noHex\` is enabled 2`] = `
SharedArrayBuffer {
	195
	132
	0
	203
	135
	33
	10
}
`;

exports[`Lists Typed arrays ArrayBuffers ignores the \`indexes\` option 1`] = `
ArrayBuffer {
	195
	132
	0
	203
	135
	33
	10
}
`;

exports[`Lists Typed arrays ArrayBuffers ignores the \`indexes\` option 2`] = `
ArrayBuffer {
	195
	132
	0
	203
	135
	33
	10
	
	0: 1
	foo: "Foo"
}
`;

exports[`Lists Typed arrays ArrayBuffers ignores the \`indexes\` option 3`] = `
ArrayBuffer {
	│0x00000000│ C3 84 00 CB 87 21 0A
	
	0: 1
	foo: "Foo"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints assigned properties 1`] = `
ArrayBuffer {
	│0x00000000│ C3 84 00 CB 87 21 0A
	
	foo: "Foo"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints assigned properties 2`] = `
ArrayBuffer {
	195
	132
	0
	203
	135
	33
	10
	
	foo: "Foo"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints assigned properties 3`] = `
ArrayBuffer {
	│0x00000000│ C3 84 00 CB 87 21 0A
	
	0: 1
	foo: "Foo"
	bar: "Bar"
	@@split: "Bytes"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints assigned properties 4`] = `
ArrayBuffer {
	195
	132
	0
	203
	135
	33
	10
	
	0: 1
	foo: "Foo"
	bar: "Bar"
	@@split: "Bytes"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints assigned properties 5`] = `
ArrayBuffer {
	│0x00000000│ C3 84 00 CB 87 21 0A
	
	0: 1
	1: "2"
	foo: "Foo"
	bar: "Bar"
	@@split: "Bytes"
	Symbol(ABC): "abc"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints assigned properties 6`] = `
ArrayBuffer {
	195
	132
	0
	203
	135
	33
	10
	
	0: 1
	1: "2"
	foo: "Foo"
	bar: "Bar"
	@@split: "Bytes"
	Symbol(ABC): "abc"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints empty buffers on one line 1`] = `ArrayBuffer {}`;

exports[`Lists Typed arrays ArrayBuffers prints empty buffers on one line 2`] = `ArrayBuffer {}`;

exports[`Lists Typed arrays ArrayBuffers prints empty buffers on one line 3`] = `
ArrayBuffer {
	foo: "Foo"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints empty buffers on one line 4`] = `
ArrayBuffer {
	foo: "Foo"
}
`;

exports[`Lists Typed arrays ArrayBuffers prints the buffer's contents in hexadecimal 1`] = `
ArrayBuffer {
	│0x00000000│ 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
	│0x00000010│ 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F
	│0x00000020│ 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F
	│0x00000030│ 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F
	│0x00000040│ 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F
	│0x00000050│ 50 51 52 53 54 55 56 57 58 59 5A 5B 5C 5D 5E 5F
	│0x00000060│ 60 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F
	│0x00000070│ 70 71 72 73 74 75 76 77 78 79 7A 7B 7C 7D 7E 7F
	│0x00000080│ 80 81 82 83 84 85 86 87 88 89 8A 8B 8C 8D 8E 8F
	│0x00000090│ 90 91 92 93 94 95 96 97 98 99 9A 9B 9C 9D 9E 9F
	│0x000000A0│ A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 AA AB AC AD AE AF
	│0x000000B0│ B0 B1 B2 B3 B4 B5 B6 B7 B8 B9 BA BB BC BD BE BF
	│0x000000C0│ C0 C1 C2 C3 C4 C5 C6 C7 C8 C9 CA CB CC CD CE CF
	│0x000000D0│ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 DA DB DC DD DE DF
	│0x000000E0│ E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 EA EB EC ED EE EF
	│0x000000F0│ F0 F1 F2 F3 F4 F5 F6 F7 F8 F9 FA FB FC FD FE
}
`;

exports[`Lists Typed arrays ArrayBuffers prints the buffer's contents in hexadecimal 2`] = `
ArrayBuffer {
	│0x00000000│ C3 84 00 CB 87 21 0A
}
`;

exports[`Lists Typed arrays ArrayBuffers prints the buffer's contents in hexadecimal 3`] = `
SharedArrayBuffer {
	│0x00000000│ C3 84 00 CB 87 21 0A
}
`;

exports[`Lists Typed arrays Others prints assigned properties 1`] = `
Float64Array [
	1.2
	3.4
	5.6
	
	baz: "Baz"
]
`;

exports[`Lists Typed arrays Others prints assigned properties 2`] = `
Float64Array [
	1.2
	3.4
	5.6
	
	baz: "Baz"
]
`;

exports[`Lists Typed arrays Others prints assigned properties 3`] = `
Uint16Array [
	1
	20
	30
	
	foo: "Foo"
]
`;

exports[`Lists Typed arrays Others prints assigned properties 4`] = `
Uint16Array [
	1
	20
	30
	
	foo: "Foo"
]
`;

exports[`Lists Typed arrays Others prints assigned properties 5`] = `
BigUint64Array [
	1n
	2n
	3n
	
	bar: "Bar"
]
`;

exports[`Lists Typed arrays Others prints assigned properties 6`] = `
BigUint64Array [
	1n
	2n
	3n
	
	bar: "Bar"
]
`;

exports[`Lists Typed arrays Others prints empty arrays on one line 1`] = `Float64Array []`;

exports[`Lists Typed arrays Others prints empty arrays on one line 2`] = `Float64Array []`;

exports[`Lists Typed arrays Others prints empty arrays on one line 3`] = `Uint16Array []`;

exports[`Lists Typed arrays Others prints empty arrays on one line 4`] = `Uint16Array []`;

exports[`Lists Typed arrays Others prints empty arrays on one line 5`] = `BigUint64Array []`;

exports[`Lists Typed arrays Others prints empty arrays on one line 6`] = `BigUint64Array []`;

exports[`Lists Typed arrays Others prints empty arrays on one line 7`] = `
Float64Array [
	baz: "Baz"
]
`;

exports[`Lists Typed arrays Others prints empty arrays on one line 8`] = `
Float64Array [
	baz: "Baz"
]
`;

exports[`Lists Typed arrays Others prints empty arrays on one line 9`] = `
Uint16Array [
	foo: "Foo"
]
`;

exports[`Lists Typed arrays Others prints empty arrays on one line 10`] = `
Uint16Array [
	foo: "Foo"
]
`;

exports[`Lists Typed arrays Others prints empty arrays on one line 11`] = `
BigUint64Array [
	bar: "Bar"
]
`;

exports[`Lists Typed arrays Others prints empty arrays on one line 12`] = `
BigUint64Array [
	bar: "Bar"
]
`;

exports[`Lists Typed arrays Others prints other typed arrays normally 1`] = `
Float64Array [
	0
	0
	0
	0
	0
]
`;

exports[`Lists Typed arrays Others prints other typed arrays normally 2`] = `
Float64Array [
	1.2
	3.4
	5.6
	-64
	-1.5
]
`;

exports[`Lists Typed arrays Others prints other typed arrays normally 3`] = `
Uint16Array [
	0
	0
	0
	0
	0
]
`;

exports[`Lists Typed arrays Others prints other typed arrays normally 4`] = `
Uint16Array [
	1
	2
	3
	4
	5
]
`;

exports[`Lists Typed arrays Others prints other typed arrays normally 5`] = `
BigUint64Array [
	0n
	0n
	0n
	0n
	0n
]
`;

exports[`Lists Typed arrays Others prints other typed arrays normally 6`] = `
BigUint64Array [
	1n
	2n
	3n
	4n
	8n
]
`;

exports[`Lists Typed arrays Others prints other typed arrays normally 7`] = `
BigInt64Array [
	1n
	2n
	3n
	4n
	-6n
]
`;

exports[`Lists Typed arrays Uint8Arrays doesn't print hexadecimal if \`noHex\` is enabled 1`] = `
Uint8Array [
	195
	132
	0
	203
	135
	33
	10
]
`;

exports[`Lists Typed arrays Uint8Arrays prints assigned properties 1`] = `
Uint8Array [
	│0x00000000│ C3 84 00 CB 87 21 0A
	
	foo: "Foo"
]
`;

exports[`Lists Typed arrays Uint8Arrays prints assigned properties 2`] = `
Uint8Array [
	│0x00000000│ 00 84 00 CB 87 21 0A
	
	foo: "Foo"
	bar: "Bar"
	@@split: "Bytes"
]
`;

exports[`Lists Typed arrays Uint8Arrays prints assigned properties 3`] = `
Uint8Array [
	│0x00000000│ 00 84 00 CB 87 21 0A
	
	foo: "Foo"
	bar: "Bar"
	@@split: "Bytes"
	Symbol(ABC): "abc"
]
`;

exports[`Lists Typed arrays Uint8Arrays prints empty arrays on one line 1`] = `Uint8Array []`;

exports[`Lists Typed arrays Uint8Arrays prints empty arrays on one line 2`] = `Uint8Array []`;

exports[`Lists Typed arrays Uint8Arrays prints empty arrays on one line 3`] = `
Uint8Array [
	foo: "Foo"
]
`;

exports[`Lists Typed arrays Uint8Arrays prints empty arrays on one line 4`] = `
Uint8Array [
	foo: "Foo"
]
`;

exports[`Lists Typed arrays Uint8Arrays prints entries in hexadecimal 1`] = `
Uint8Array [
	│0x00000000│ 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
	│0x00000010│ 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F
	│0x00000020│ 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F
	│0x00000030│ 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F
	│0x00000040│ 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F
	│0x00000050│ 50 51 52 53 54 55 56 57 58 59 5A 5B 5C 5D 5E 5F
	│0x00000060│ 60 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F
	│0x00000070│ 70 71 72 73 74 75 76 77 78 79 7A 7B 7C 7D 7E 7F
	│0x00000080│ 80 81 82 83 84 85 86 87 88 89 8A 8B 8C 8D 8E 8F
	│0x00000090│ 90 91 92 93 94 95 96 97 98 99 9A 9B 9C 9D 9E 9F
	│0x000000A0│ A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 AA AB AC AD AE AF
	│0x000000B0│ B0 B1 B2 B3 B4 B5 B6 B7 B8 B9 BA BB BC BD BE BF
	│0x000000C0│ C0 C1 C2 C3 C4 C5 C6 C7 C8 C9 CA CB CC CD CE CF
	│0x000000D0│ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 DA DB DC DD DE DF
	│0x000000E0│ E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 EA EB EC ED EE EF
	│0x000000F0│ F0 F1 F2 F3 F4 F5 F6 F7 F8 F9 FA FB FC FD FE
]
`;

exports[`Lists Typed arrays Uint8Arrays prints entries in hexadecimal 2`] = `
Uint8Array [
	│0x00000000│ C3 84 00 CB 87 21 0A
]
`;
